name: Export ECAD
on:
  workflow_dispatch:
  push:
  pull_request:
  release:
    types: [ published ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  export-ecad:
    name: Export ECAD
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad8_auto_full:latest

    strategy:
      matrix:
        pcbs: [bus, cm4]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Update the PCBs on release with hash and release tag
      if: github.event_name == 'release'
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"
        echo "GITHUB_REF_NAME = ${GITHUB_REF_NAME}"
        sed -i "s/<<HASH>>/${GITHUB_REF_NAME}-${COMMIT}/g" pcb/${{ matrix.pcbs }}/*

    - name: Update the PCBs with the BETA and git hash
      if: github.event_name != 'release'
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"
        sed -i "s/<<HASH>>/BETA-${COMMIT}/g" pcb/${{ matrix.pcbs }}/*

    - name: check KiCad files
      run: kibot -c test.kibot.yaml -e pcb/${{ matrix.pcbs }}/${{ matrix.pcbs }}.kicad_sch -d output

    - name: Generate ${{ matrix.pcbs }} Export Files
      run: kibot -c output.kibot.yaml -e pcb/${{ matrix.pcbs }}/${{ matrix.pcbs }}.kicad_sch -b pcb/${{ matrix.pcbs }}/${{ matrix.pcbs }}.kicad_pcb -d output

    - name: Upload Export Files as Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.pcbs }}
        path: output
        if-no-files-found: error

  build:
    runs-on: ubuntu-latest
    needs: export-ecad
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        with:
          generator_config_file: docs
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: cd docs && bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - uses: actions/download-artifact@v4
        with:
          path: docs/_site/pcb
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
