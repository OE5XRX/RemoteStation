name: Create Docs on Main
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  release:
    types: [published]

permissions:
  contents: write

jobs:
  export-ecad:
    name: Export ECAD
    runs-on: ubuntu-24.04
    if: always()

    strategy:
      matrix:
        pcbs: [bus, cm4, device_test, power, fm]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache 3D models data
        id: models-cache
        uses: set-soft/cache@main
        with:
          path: ~/cache_3d
          key: cache_3d

      - name: Update the PCBs on release with hash and release tag
        if: github.event_name == 'release'
        run: |
          export COMMIT=$(git rev-parse --short HEAD)
          echo "COMMIT = ${COMMIT}"
          echo "GITHUB_REF_NAME = ${GITHUB_REF_NAME}"
          sed -i "s/<<HASH>>/${GITHUB_REF_NAME}-${COMMIT}/g" pcb/${{ matrix.pcbs }}/*

      - name: Update the PCBs with the BETA and git hash
        if: github.event_name != 'release'
        run: |
          export COMMIT=$(git rev-parse --short HEAD)
          echo "COMMIT = ${COMMIT}"
          sed -i "s/<<HASH>>/BETA-${COMMIT}/g" pcb/${{ matrix.pcbs }}/*

      - name: Generate ${{ matrix.pcbs }} Export Files
        if: always()
        uses: INTI-CMNB/KiBot@v2_k9
        with:
          config: pcb/output.kibot.yaml
          dir: output
          schema: 'pcb/${{ matrix.pcbs }}/${{ matrix.pcbs }}.kicad_sch'
          board: 'pcb/${{ matrix.pcbs }}/${{ matrix.pcbs }}.kicad_pcb'
          cache3D: YES
          verbose: 0

      - name: Generate ${{ matrix.pcbs }} Export Files for parts
        if: github.event_name == 'release'
        uses: INTI-CMNB/KiBot@v2_k9
        with:
          config: pcb/bom.kibot.yaml
          dir: output
          schema: 'pcb/${{ matrix.pcbs }}/${{ matrix.pcbs }}.kicad_sch'
          board: 'pcb/${{ matrix.pcbs }}/${{ matrix.pcbs }}.kicad_pcb'
          cache3D: YES
          verbose: 0

      - name: Upload Export Files as Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.pcbs }}
          path: output
          if-no-files-found: error


      - name: Generate ${{ matrix.pcbs }} Parts on InvenTree Server
        if: github.event_name == 'release'
        run: |
          pip install -r scripts/requirements.txt
          python3 scripts/bom-export.py --csv_file output/${{ matrix.pcbs }}-bom.csv --name "${{ matrix.pcbs }}" --version "${{ github.ref_name }}" --pcb_image output/${{ matrix.pcbs }}-3D_top-without.png --assembly_image output/${{ matrix.pcbs }}-3D_top-with.png

  collect-and-provide:
    runs-on: ubuntu-24.04
    needs: export-ecad
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        with:
          generator_config_file: docs

      - name: Update BASEURL for releases
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo DEPLOY_PATH=/version/$(echo $GITHUB_REF | cut -d / -f 3 | cut -d v -f 2- | cut -d . -f 1,2)/ >> $GITHUB_ENV
          echo BASEURL=${{ steps.pages.outputs.base_path }}/version/$(echo $GITHUB_REF | cut -d / -f 3 | cut -d v -f 2- | cut -d . -f 1,2)/ >> $GITHUB_ENV

      - name: Update BASEURL for main branches
        if: ${{ github.ref_type == 'branch' && github.ref_name == 'main'}}
        run: |
          echo DEPLOY_PATH=/ >> $GITHUB_ENV
          echo BASEURL=${{ steps.pages.outputs.base_path }}/ >> $GITHUB_ENV

      - name: Build with Jekyll
        run:  cd docs && bundle exec jekyll build --baseurl ${{ env.BASEURL }}
        env:
          JEKYLL_ENV: production

      - uses: actions/download-artifact@v4
        with:
          path: docs/_site/pcb

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs/_site # The folder the action should deploy.
          TARGET_FOLDER: ${{ env.DEPLOY_PATH }}
          CLEAN: true # Automatically remove deleted files from the deploy branch
          CLEAN_EXCLUDE: '["version"]'
